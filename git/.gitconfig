[github]
    user = dobrescu

[user]
    email = dobrescu
    name = Dan Dobrescu

[commit]
    gpgsign = false
    template = ~/dotfiles/git/gitmessage

[core]
    pager = delta --side-by-side -w ${FZF_PREVIEW_COLUMNS:-$COLUMNS}
    excludesFile = ~/dotfiles/git/global_gitignore
    ignoreCase = false
    sshCommand = ssh -i ~/.ssh/id_rsa_dobrescu
    hooksPath = ~/dotfiles/git/hooks

[includeIf "gitdir:~/workspace/studyportals/"]
	path = ~/.gitconfig.work

[rerere]
    enabled = true

[apply]
    whitespace = fix

[grep]
    lineNumber = true

[init]
    defaultBranch = main

[branch]
    sort = -committerdate

[color]
    ui = true

[pull]
    rebase = true

[rebase]
    autoStash = true

[gist]
    private = yes

[log]
    decorate = short
	date = iso

[fetch]
    prune = true
    output = compact

[help]
    autocorrect = prompt

[merge]
    log = true
    conflictstyle = diff3

[interactive]
    diffFilter = delta --color-only --features=interactive

[include]
    path = /usr/share/delta/themes.gitconfig

[delta]
    dark = true
    features = gruvmax-fang
    hyperlinks = true
    hyperlinks-file-link-format = "vscode://file/{path}:{line}"
    line-numbers = true
    navigate = true
    side-by-side = true
    true-color = always

[delta "interactive"]
    keep-plus-minus-markers = false

[delta "decorations"]
    file-style = omit
    hunk-header-style = file line-number syntax

[gpg]
    program = /usr/bin/gpg

[diff]
    colorMoved = default
    tool = delta
    mnemonicPrefix = true
    renames = copies

[gpg "ssh"]
    allowedSignersFile = ~/.ssh/allowed_signers

[push]
    autoSetupRemote = true
    autoSetupRemove = true
    default = simple

[credential]
    helper = cache --timeout=3600

[gc]
    auto = 256

[alias]
    lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    s = status -s
    shame = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"
    alias = config --get-regexp alias
# Interactive rebase with the given number of latest commits.
    reb = "!r() { git rebase -i HEAD~$1; }; r"
    tag = "tag -s"
# Find commits by source code
    fc = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short -S$1; }; f"
# Find commits by commit message
    fm = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short --grep=$1; }; f"
# Remove branches that have already been merged with main.
# a.k.a. ‘delete merged’
    bye = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"
# List contributors with number of commits.
    contributors = shortlog --summary --numbered
